project.ext {
    cukesVersion = '1.1.5'
    groovyVersion = '2.4.3'
    jacocoVersion = '0.7.2.201409121644'
    spockVersion = '0.7-groovy-2.0'
    metricsSpringVersion = '3.0.3'
}

buildscript {
    repositories {
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        mavenCentral()
        dependencies {
            classpath "au.com.ish.gradle:release:2.1"
            classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        }
    }
}

apply plugin: 'release'

release {
    failOnSnapshotDependencies = true
    allowLocalModifications = false
    releaseDryRun = false
    scm = "git"
}

allprojects {

    apply plugin: 'maven'
    apply plugin: 'groovy'

    repositories {
        mavenCentral()
    }

    group = 'com.susu.movies'
    version = release.projectVersion

    task wrapper(type: Wrapper) {
        gradleVersion = 2.3
    }
}

def checkStatus(pingUrl, timeout) {
    println "Pinging $pingUrl"

    def complete = false
    use(groovy.time.TimeCategory) {
        def end = new Date() + timeout.minutes
        while (!complete && new Date() < end) {
            try {
                project.logger.debug "Pinging $pingUrl"
                pingUrl.text
                complete = true
            } catch (IOException ignore) {
                sleep(5000)
            }
        }

        if (!complete) {
            throw new RuntimeException("Error pinging features.remote server: $pingUrl")
        }
    }
}

fileTree(projectDir).include('build-*.gradle').each { file ->
    def fileName = '' + file
    apply from: fileName
}